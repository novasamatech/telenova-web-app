name: Build image
concurrency:
  group: ${{ github.workflow }}

on:
  workflow_dispatch:
  pull_request:
    types: [closed, synchronize, opened]
    branches:
      - 'main'
      - 'dev'
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  packages: write

jobs:
  build-docker:
    runs-on: ubuntu-latest
    outputs:
      docker_tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set application version
        run: echo "PUBLIC_APP_VERSION=$(npm pkg get version | tr -d '\"')" >> $GITHUB_ENV

      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: .docker/Dockerfile
          build-args: |
            PUBLIC_APP_VERSION=${{ env.PUBLIC_APP_VERSION }}

  notify-dev:
    runs-on: ubuntu-latest
    needs: build-docker
    if: ${{ github.event.pull_request.merged && github.ref == 'refs/heads/dev' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Send notification
        uses: ./.github/actions/notify
        with:
          TELEGRAM_TO: ${{ secrets.TELEGRAM_TO }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          DEPLOYED_BOT: nova_wallet_dev_bot
          APP_LINK: https://t.me/nova_wallet_dev_bot/novawallet_dev
